@model List<PhoneShop.Controllers.Seller.DataView.AreaData>
@{
    ViewData["Title"] = "Revenue_EveryDay";
    Layout = "~/Views/Shared/Seller/_SellerLayout.cshtml";

    
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link"> Doanh thu ngày </a>
        </li>
    </ul>
}

<section class="content" style="background:white">

    <div class="col-12">

        <h3 class="text-center mb-3">Doanh thu hằng ngày</h3>
        <div style="width: 80%; margin: auto;">
            <canvas id="areaChart"></canvas>
        </div>

    </div></section>

    @section scripts_SellerHome{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('areaChart').getContext('2d');
            var labels = @Html.Raw(Json.Serialize(Model.Select(data => data.X.ToString("dd/MM/yyyy"))));
            var data = @Html.Raw(Json.Serialize(Model.Select(data => data.Y)));
            var formattedData = @Html.Raw(Json.Serialize(Model.Select(data => data.formattedPrice)));
         
            
            var chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Tổng danh thu theo ngày',
                        data: data,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'category',
                            labels: labels
                        },
                        y: {
                            ticks: {
                                callback: function (value, index, values) {
                                    return formattedData[index];
                                }
                            }
                        }
                    },
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return formattedData[tooltipItem.index];
                            }
                        }
                    }
                }
            });
        });
    </script>
    
    }

